[tool.poetry]
name = "llm-ethic"
version = "0.1.0"
description = "Experiment to evaluate how small LLMs respond to moral scenarios with different ethical frameworks"
authors = ["Rumi Allbert <rumi.allbert@wolframinstitute.org>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.1.0"
numpy = "^1.24.0"
tqdm = "^4.66.1"
sentence-transformers = "^2.2.2"
scikit-learn = "^1.3.0"
ollama = "^0.1.5"
pydantic = "^2.4.0"
hydra-core = "^1.3.2"
omegaconf = "^2.3.0"
matplotlib = "^3.7.2"
seaborn = "^0.12.2"
datasets = "^2.14.5"
pyyaml = "^6.0.1"
setuptools = "^69.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.0.286"
mypy = "^1.5.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "B", "I", "N", "UP", "ANN", "C4", "BLE", "A"]
ignore = ["ANN001"]                                               # Missing type annotation for `self`

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
